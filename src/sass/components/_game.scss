@use "../utils/variables" as var;
@use "../utils/hideText" as hideText;
@use "./utils/flex-mixin" as mix;

.game {
  @include mix.setFlex();
  height: 100%;
  &__stepTitle {
    @extend %hideText;
  }

  &__curtain {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.703);
    z-index: 1;

    &--hide {
      display: none;
    }
  }

  &__start {
    position: relative;
    transform: scale(0.6);
    @media only screen and (min-height: 500px) {
      transform: scale(0.7);
    }
    @media only screen and (min-width: 700px) and (min-height: 600px) {
      transform: scale(1);
    }

    &--hide {
      display: none;
    }

    &BgImg {
      width: 350px;
      position: absolute;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: -5;

      &--hide {
        display: none;
      }
    }

    &Btn {
      position: absolute;

      &.gameBtn {
        &Spock {
          top: -90px;
          left: -210px;
        }

        &Lizard {
          bottom: -200px;
          left: -150px;
        }

        &Rock {
          bottom: -200px;
          right: -150px;
        }

        &Paper {
          top: -90px;
          right: -210px;
        }

        &Scissors {
          top: -210px;
          left: -50px;
        }
      }
    }
  }

  &__check {
    @include mix.setFlex();
    margin-bottom: -45px;
    @media only screen and (min-height: 600px) {
      margin-bottom: 120px;
    }
    gap: 5px;
    @media only screen and (min-height: 500px) {
      gap: 30px;
    }
    @media only screen and (min-width: 900px) and (min-height: 600px) {
      gap: 90px;
    }

    &--hide {
      display: none;
    }

    &Info {
      @include mix.setFlex(column);
      gap: 40px;
      @media only screen and (min-width: 500px) and (min-height: 500px) {
        gap: 60px;
      }
      @media only screen and (min-width: 700px) and (min-height: 600px) {
        gap: 110px;
      }
      @media only screen and (min-width: 700px) and (min-height: 700px) {
        gap: 140px;
      }

      &Title {
        width: 180px;
        text-align: center;
        letter-spacing: 2px;
        font-size: 14px;
        order: 1;
        @media only screen and (min-width: 500px) and (min-height: 500px) {
          order: 0;
          font-size: 18px;
        }
        @media only screen and (min-width: 700px) and (min-height: 600px) {
          width: 220px;
          order: 0;
          font-size: 22px;
          letter-spacing: 3px;
        }
      }

      &Pick {
        @include mix.setFlex();
        display: block;
        position: relative;
        pointer-events: none;
        transition: var.$Transition;
        transform: scale(0.9);
        @media only screen and (min-width: 500px) and (min-height: 500px) {
          transform: scale(1.2);
        }
        @media only screen and (min-width: 700px) and (min-height: 600px) {
          transform: scale(1.4);
        }
        @media only screen and (min-width: 900px) and (min-height: 600px) {
          transform: scale(1.8);
        }
        z-index: -1;

        &--hide {
          display: none;
        }

        &--active {
          &.game__btn {
            &::before {
              content: "";
              display: block;
              width: 300px;
              height: 300px;
              background-color: red;
            }
          }
          box-shadow: 0px 0px 0px 50px rgba(112, 112, 112, 0.055),
            0px 0px 0px 85px rgba(66, 68, 90, 0.165),
            0px 0px 0px 130px rgba(255, 255, 255, 0.025);
        }
      }

      &None {
        width: 100px;
        height: 100px;
        @media only screen and (min-width: 700px) and (min-height: 600px) {
          transform: scale(1.8);
        }
        border-radius: 50%;
        background-color: hsl(237, 49%, 15%);
        opacity: 0.5;

        &--hide {
          display: none;
        }
      }
    }
  }

  &__final {
    position: absolute;
    bottom: 120px;
    @media only screen and (min-height: 700px) {
      bottom: 150px;
    }
    text-align: center;
    @media only screen and (min-width: 600px) {
      position: static;
      align-self: flex-end;
    }
    &--hide {
      display: none;
    }

    &Result {
      font-size: 50px;
    }

    &Btn {
      cursor: pointer;
      width: 195px;

      height: 43px;
      margin-top: 10px;
      border-radius: 8px;
      background-color: var.$Light-Text;
      font-size: 13px;
      border: none;
      color: var.$Dark-Text;
      letter-spacing: 2px;
      font-weight: 600;
      border: 3px solid var.$Light-Text;
      transition: var.$Transition;

      &:hover,
      &:focus,
      &:active {
        color: var.$Light-Text;
        background-color: transparent;
      }
    }
  }

  &__rulesBtn {
    position: absolute;
    left: 50%;
    bottom: 50px;
    transform: translate(-50%, 0);
    @media only screen and (min-width: 600px) {
      bottom: 15px;
      right: 25px;
      left: auto;
      transform: translate(0, 0);
    }
    
    border: 2px solid var.$Light-Text;
    border-radius: 8px;
    color: var.$Light-Text;
    cursor: pointer;
    background-color: transparent;
    padding: 10px 37px;
    letter-spacing: 2px;
    font-weight: 500;
    font-size: 15px;
    transition: var.$Transition;

    &:hover,
    &:focus,
    &:active {
      color: var.$Dark-Text;
      background-color: var.$Light-Text;
    }
  }
}
