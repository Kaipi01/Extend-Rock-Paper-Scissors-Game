@use "../utils/variables" as var;
@use "./utils/flex-mixin" as mix;

.gameBtn {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  border: none;
  cursor: pointer;

  &__bg {
    @include mix.setFlex();
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background-color: hsl(0, 0%, 100%);
  }

  &::after {
    content: "";
    display: block;
    position: absolute;
    top: -20px;
    left: -17.5px;
    border-radius: 50%;
    transition: var.$Transition;
    width: 135px;
    height: 135px;
    z-index: -2;
  }

  &::before {
    content: "";
    display: block;
    position: absolute;
    background-color: var.$Light-Gray;
    top: -5px;
    left: 0px;
    border-radius: 50%;
    width: 100px;
    height: 100px;
    z-index: -1;
  }

  &Spock {
    &::after {
      background: var.$Cyan-Gradient;
      -webkit-box-shadow: 0px 6px 0px 0px var.$Cyan-Color;
      -moz-box-shadow: 0px 6px 0px 0px var.$Cyan-Color;
      box-shadow: 0px 6px 0px 0px var.$Cyan-Color;
    }

    &:hover,
    &:focus,
    &:active {
      &::after {
        -webkit-box-shadow: var.$Cyan-Box-Shadow;
        -moz-box-shadow: var.$Cyan-Box-Shadow;
        box-shadow: var.$Cyan-Box-Shadow;
        transform: scale(1.1);
      }
    }
  }

  &Lizard {
    &::after {
      background: var.$Lizard-Gradient;
      -webkit-box-shadow: 0px 6px 0px 0px var.$Lizard-Color;
      -moz-box-shadow: 0px 6px 0px 0px var.$Lizard-Color;
      box-shadow: 0px 6px 0px 0px var.$Lizard-Color;
    }

    &:hover,
    &:focus,
    &:active {
      &::after {
        -webkit-box-shadow: var.$Lizard-Box-Shadow;
        -moz-box-shadow: var.$Lizard-Box-Shadow;
        box-shadow: var.$Lizard-Box-Shadow;
        transform: scale(1.1);
      }
    }
  }

  &Rock {
    &::after {
      background: var.$Rock-Gradient;
      -webkit-box-shadow: 0px 6px 0px 0px var.$Rock-Color;
      -moz-box-shadow: 0px 6px 0px 0px var.$Rock-Color;
      box-shadow: 0px 6px 0px 0px var.$Rock-Color;
    }

    &:hover,
    &:focus,
    &:active {
      &::after {
        -webkit-box-shadow: var.$Rock-Box-Shadow;
        -moz-box-shadow: var.$Rock-Box-Shadow;
        box-shadow: var.$Rock-Box-Shadow;
        transform: scale(1.1);
      }
    }
  }

  &Paper {
    &::after {
      background: var.$Paper-Gradient;
      -webkit-box-shadow: 0px 6px 0px 0px var.$Paper-Color;
      -moz-box-shadow: 0px 6px 0px 0px var.$Paper-Color;
      box-shadow: 0px 6px 0px 0px var.$Paper-Color;
    }

    &:hover,
    &:focus,
    &:active {
      &::after {
        -webkit-box-shadow: var.$Paper-Box-Shadow;
        -moz-box-shadow: var.$Paper-Box-Shadow;
        box-shadow: var.$Paper-Box-Shadow;
        transform: scale(1.1);
      }
    }
  }

  &Scissors {
    &::after {
      background: var.$Scissors-Gradient;
      -webkit-box-shadow: 0px 6px 0px 0px var.$Scissors-Color;
      -moz-box-shadow: 0px 6px 0px 0px var.$Scissors-Color;
      box-shadow: 0px 6px 0px 0px var.$Scissors-Color;
    }

    &:hover,
    &:focus,
    &:active {
      &::after {
        -webkit-box-shadow: var.$Scissors-Box-Shadow;
        -moz-box-shadow: var.$Scissors-Box-Shadow;
        box-shadow: var.$Scissors-Box-Shadow;
        transform: scale(1.1);
      }
    }
  }
}
